/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Moshe as PrismaMoshe } from "@prisma/client";

export class MosheServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MosheCountArgs, "select">): Promise<number> {
    return this.prisma.moshe.count(args);
  }

  async moshes(args: Prisma.MosheFindManyArgs): Promise<PrismaMoshe[]> {
    return this.prisma.moshe.findMany(args);
  }
  async moshe(args: Prisma.MosheFindUniqueArgs): Promise<PrismaMoshe | null> {
    return this.prisma.moshe.findUnique(args);
  }
  async createMoshe(args: Prisma.MosheCreateArgs): Promise<PrismaMoshe> {
    return this.prisma.moshe.create(args);
  }
  async updateMoshe(args: Prisma.MosheUpdateArgs): Promise<PrismaMoshe> {
    return this.prisma.moshe.update(args);
  }
  async deleteMoshe(args: Prisma.MosheDeleteArgs): Promise<PrismaMoshe> {
    return this.prisma.moshe.delete(args);
  }
}
